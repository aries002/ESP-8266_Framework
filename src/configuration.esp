bool ICACHE_FLASH_ATTR set_config(){

  File file_konfig = SPIFFS.open("/konfig.json", "r");
  if(!file_konfig){
    Log("Config file not found!", 1);
    return false;
  }
  DynamicJsonBuffer json_config_Buffer;
  // DynamicJsonBuffer jsonBuffer;
  JsonObject& json_konfig = json_config_Buffer.parseObject(file_konfig);
  if(!json_konfig.success()){
    Log("Failed to parse json configuration!!", 0);
    file_konfig.close();
    return false;
  }

  // get wifi configuration
  String wifiSSID = json_konfig["wifi_ssid"];
  wifi_ssid = strdup(wifiSSID.c_str());
  String wifiPassword = json_konfig["wifi_password"];
  wifi_password = strdup(wifiPassword.c_str());
  wifi_mode = json_konfig["wifi_mode"];

  // get web udater configuration
  if(json_konfig["web_updater_url"] != ""){
    web_updater = true;
    String proc_web_updater_url = json_konfig["web_updater_url"];
    web_updater_url = strdup(proc_web_updater_url.c_str());
    if(json_konfig["web_updater_token"] != NULL){
      String proc_web_updater_token = json_konfig["web_updater_token"];
      web_updater_token = strdup(proc_web_updater_token.c_str());
    }
  }

  // get mqtt configuration
  mqtt = json_konfig["mqtt"];
  if(mqtt){
    String proc_mqtt_host = json_konfig["mqtt_host"];
    mqtt_host = strdup(proc_mqtt_host.c_str());
    if(json_konfig["mqtt_user"] != ""){
      String proc_mqtt_user = json_konfig["mqtt_user"];
      mqtt_user = strdup(proc_mqtt_user.c_str());
      String proc_mqtt_password = json_konfig["mqtt_password"];
      mqtt_password = strdup(proc_mqtt_password.c_str());
    }
    String proc_mqtt_pub_topic = json_konfig["mqtt_pub_topic"];
    mqtt_pub_topic = strdup(proc_mqtt_pub_topic.c_str());
    String proc_mqtt_sub_topic = json_konfig["mqtt_sub_topic"];
    mqtt_sub_topic = strdup(proc_mqtt_sub_topic.c_str());
    
    String proc_mqtt_topic = json_konfig["mqtt_topic"];
    mqtt_topic = strdup(proc_mqtt_topic.c_str());
    String proc_mqtt_clientID = json_konfig["mqtt_clientID"];
    mqtt_clientID = strdup(proc_mqtt_clientID.c_str());
#ifdef DEBUG
    Serial.println("Mqtt activated!!");
    Serial.println(mqtt_host);
#endif
  }
  
  // close configuration file
  file_konfig.close();
  return true;
}

void ICACHE_FLASH_ATTR reset_config(){
  Log("Resetting configuration..", 2);
  SPIFFS.remove("/konfig.json");
  delay(1000);
  req_reboot = true;
}
