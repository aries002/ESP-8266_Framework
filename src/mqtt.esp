//---------------------------------------SYSTEM MQTT CONNECTOR----------------------
void ICACHE_FLASH_ATTR mqtt_callback(char* topic, byte* payload, int length) {
#ifdef DEBUG
  Serial.print("Message arrived [");
  Serial.print(topic);
  Serial.print("] ");
  for (int i = 0; i < length; i++) {
    Serial.print((char)payload[i]);
  }
  Serial.println();
#endif
  // Switch on the LED if an 1 was received as first character
  if ((char)payload[0] == '1') {
    digitalWrite(statusLED, LOW);   // Turn the LED on (Note that LOW is the voltage level
    // but actually the LED is on; this is because
    // it is active low on the ESP-01)
  } else {
    digitalWrite(statusLED, HIGH);  // Turn the LED off by making the voltage HIGH
  }

}


bool ICACHE_FLASH_ATTR mqtt_reconnect() {
  // Loop until we're reconnected
  if (!mqtt_client.connected()) {
#ifdef DEBUG
    Serial.print("Attempting MQTT connection...");
#endif

    // Attempt to connect
    
    if (mqtt_client.connect(mqtt_clientID)) {
#ifdef DEBUG
      Serial.println("connected");
      // Once connected, publish an announcement...
#endif
      mqtt_client.publish(mqtt_out_topic, "hello world");
      // ... and resubscribe
      mqtt_client.subscribe(mqtt_in_topic);
      
      return true;
    } else {
#ifdef DEBUG
      Serial.print("failed, rc=");
      Serial.print(mqtt_client.state());
#endif
      return false;
    }
  }
  return true;
}

