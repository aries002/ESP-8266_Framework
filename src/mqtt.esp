//---------------------------------------SYSTEM MQTT CONNECTOR----------------------
bool ICACHE_FLASH_ATTR mqtt_connect(){
  Log("Connecting to mqtt broker.");
  mqtt_client.setServer(mqtt_host, 1883);
  mqtt_client.setCallback(mqtt_subscribe);
  // Attempt to connect

  if(mqtt_user != NULL && mqtt_password != NULL){
    mqtt_client.connect(mqtt_clientID,mqtt_user,mqtt_password);
  }else{
    mqtt_client.connect(mqtt_clientID);
  }
// check connection
  if (mqtt_client.connected()) {
    Log("Connected!");
    // Once connected, publish an announcement...
    mqtt_client.publish(mqtt_pub_topic, "{message : 'ready'}");
    // // ... and resubscribe
    mqtt_client.subscribe(mqtt_sub_topic);
    return true;
  } else {
    int state = mqtt_client.state();
    Log("Failed, rc="+String(state),1);
    return false;
  }
}

bool ICACHE_FLASH_ATTR mqtt_publish(){
  String message = mqtt_publish_data();
  snprintf (msg, MSG_BUFFER_SIZE,strdup(message.c_str()));
  Log(msg,3);
  mqtt_client.publish(mqtt_pub_topic,msg);
  return true;
  }

bool ICACHE_FLASH_ATTR mqtt_reconnect() {
  // Loop until we're reconnected
  Log("Attempting MQTT connection...");
  if (!mqtt_client.connected()) {
    // Attempt to connect
    if(mqtt_user != NULL && mqtt_password != NULL){
      mqtt_client.connect(mqtt_clientID,mqtt_user,mqtt_password);
    }else{
      mqtt_client.connect(mqtt_clientID);
    }
    //check connection
    if (mqtt_client.connected()) {
      Log("Connected!");
      // Once connected, publish an announcement...
      mqtt_client.publish(mqtt_pub_topic, "{message : 'ready'}");
      // // ... and resubscribe
      mqtt_client.subscribe(mqtt_sub_topic);
      return true;
    } else {
      int state = mqtt_client.state();
      Log("Failed, rc="+String(state),1);
      return false;
    }
  }else{
    Log("MQTT alredy connected");
  }
  return true;
}